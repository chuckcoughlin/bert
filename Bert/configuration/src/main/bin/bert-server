#!/bin/sh
# This is the init script for startup of the "bert" application.
# Logs from this script will be found in /var/log/bert/
#
# This script starts the dispatcher for "bert". This is necessary to
# operate either the bluetooth command or interactive terminal interfaces.

### BEGIN INIT INFO
# Provides:          bert
# Required-Start:    $local_fs $syslog
# Required-Stop:     $local_fs $syslog
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the bert control application
### END INIT INFO

set -e
export BERT_HOME=/usr/local/robot
export BERTLOGDIR=/var/log/bert
export BERTLOG=${BERTLOGDIR}/dispatch.log
export DAEMON=${BERT_HOME}/bin/run_dispatcher.sh
export PARAMS=""
export PIDDIR=/var/run/bert
export PIDFILE=${PIDDIR}/dispatch
PATH=/sbin:/bin:/usr/sbin:/usr/bin:${BERT_HOME}/bin

. /lib/lsb/init-functions
mkdir -p ${BERT_HOME}/logs
mkdir -p ${BERTLOGDIR}
mkdir -p ${PIDDIR}

case "$1" in
  start)
#       Uncomment for debugging, execute as: sudo bin/bert start
#        set -x
	rm -rf ${BERT_HOME}/logs/dispatcher*
	> ${BERTLOG}

	echo "=============================== /etc/init.d/bert-dispatch start ===========================" >> ${BERTLOG}
	 if [ -e ${PIDFILE} ]
	 then
	 	log_success_msg "Bert dispatcher already running ... no action taken"
	 	return
	 fi
	 start-stop-daemon --start --pidfile ${PIDFILE} --exec $DAEMON
	 log_end_msg $?
  ;;

  restart)
    /etc/init.d/bert-server stop
    /etc/init.d/bert-server start
  ;;

  stop)
	start-stop-daemon --stop --retry 5 --oknodo --pidfile ${PIDFILE} 
	log_end_msg $?
	echo "=============================== /etc/init.d/bert-server stopped ===========================" >> ${BERTLOG}
  ;;
  force-reload)
    /etc/init.d/bert-server restart
  ;;

  *)
    echo "Usage: /etc/init.d/bert-dispatch {start|stop|restart|force-reload}"
    exit 1
    ;;
esac
