<!-- Build and deploy the dispatcher, terminal, and command applications, plus all dependencies - locally -->
<project name="bert.local.install" default="all" basedir=".">
	<import file="${basedir}/build.xml"/>
	<property name="bin.dir" value="${basedir}/../Configuration/bin" />
	<property name="config.dir" value="${basedir}/../Configuration/etc" />
	<property name="native.include.dir" value="../../odroid-src/btj-1.0.1/include"/>
	
	<!-- This target will build the core application and deploy it to the robot -->
	<target name="all" depends="clean, build, deploy" />
	
	<!-- Remove the existing target -->
	<target name="clean" description="Remove existing build products">
		<delete dir="${lib.dir}"/>
		<mkdir dir="${lib.dir}"/>
		<mkdir dir="${robot.dir}/bin"/>
		<delete dir="${robot.dir}/bin"/>
		<mkdir dir="${robot.dir}/etc"/>
		<delete dir="${robot.dir}/etc"/>
		<mkdir dir="${robot.dir}/lib"/>
		<delete dir="${robot.dir}/lib"/>
	</target>
	
	<target name="build" depends="bluezdbus,share,motors,database,speech,command,server,terminal" />
	<target name="command" description="Compile the main command application">
		<echo message="Compile the Command processor" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Command/src"
				destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
		<jar destfile="${lib.dir}/bert-command.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}">
			<manifest>
				<attribute name="Main-Class" value="bert.command.main.Command"/>
			</manifest>
		</jar>
	</target>
	<target name="database" description="Compile the dataabse library">
		<echo message="Compile the database library" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Database/src"
		       	destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
	    <jar destfile="${lib.dir}/bert-database.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}"/>
	</target>
	<target name="motors" description="Compile the motors library">
		<echo message="Compile the motors library" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Motor/src"
		       	destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
	    <jar destfile="${lib.dir}/bert-motors.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}"/>
	</target>
	<target name="server" description="Compile the server">
		<echo message="Compile the Server" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Server/src"
				destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
			/>
			<jar destfile="${lib.dir}/bert-server.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}">
				<manifest>
					 <attribute name="Main-Class" value="bert.server.main.Dispatcher"/>
				</manifest>
			</jar>
	</target>
	<target name="share" description="Compile the shared common library">
		<echo message="Compile the commmon library" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Share/src"
	       		destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepath="${archive.dir}"
				includeantruntime="false"
		/>
    	<jar destfile="${lib.dir}/bert-common.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}"/>
	</target>
	<target name="speech" description="Compile the antlr/speech library">
		<echo message="Run the ANTLR code generator" />
		<mkdir dir="../Speech/src/bert/speech/antlr"/>
		<java classname="org.antlr.v4.Tool" classpathref="antlr-classpath" dir="../Speech"  fork="true">
		     <arg value="-o" />
		     <arg path="../Speech/src/bert/speech/antlr" />
		     <arg value="-package" />
		     <arg value="bert.speech.antlr" />
		     <arg value="-visitor" />
		     <arg value="-no-listener" />
		     <arg value="SpeechSyntax.g4" />
		</java>
		<echo message="Compile the speech library" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Speech/src"
		       	destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
	    <jar destfile="${lib.dir}/bert-speech.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}"/>
	</target>
	<target name="terminal" description="Compile the terminal">
		<echo message="Compile the Terminal" />
		<delete dir="${temp.dir}" />
		<mkdir dir="${temp.dir}"/>
		<javac	srcdir="../Terminal/src"
				destdir="${temp.dir}"
				compiler="javac10+"
				source="10" target="10"
				debug="true"
				modulepathref="common-modulepath"
				includeantruntime="false"
		/>
		<jar destfile="${lib.dir}/bert-terminal.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}">
			<manifest>
				<attribute name="Main-Class" value="bert.terminal.main.Terminal"/>
			</manifest>
		</jar>
	</target>
	<target name="bluezdbus" description="Compile the bluetooth-dbus library">
			<echo message="Compile the Bluetooth-Dbus library" />
			<delete dir="${temp.dir}" />
			<mkdir dir="${temp.dir}"/>
			<javac	srcdir="../BluezDbus/src"
		       		destdir="${temp.dir}"
					compiler="javac10+"
					source="10" target="10"
					debug="true"
					modulepath="${archive.dir}"
					includeantruntime="false"
			/>
		<jar destfile="${lib.dir}/bluez-dbus-0.1.1.jar" includes="**/*.class,**/*.png" basedir="${temp.dir}"/>
	</target>
	
	<!-- Copy the new jar files and configuration files into the local deployment area. -->
	<target name="deploy" >
		<!-- Make substitutions in XML configuration file -->
		<antcall target="ReplacePlacehlders">
			<param name="template" value="${config.template}"/>
			<param name="result" value="${config.file}"/>
		</antcall>
		
		<echo message="Copying configuration files locally into ${bert.home}" />
		<mkdir dir="${robot.dir}/bin" />
		<copy todir="${robot.dir}/bin">
			<fileset dir="${bin.dir}" />
		</copy>
		<chmod dir="${robot.dir}/bin" perm="ugo+rx" includes="**/*.sh"/>
		<mkdir dir="${robot.dir}/etc" />
		<copy todir="${robot.dir}/etc">
			<fileset dir="${config.dir}" />
		</copy>
		<echo message="Copying jar files locally into ${bert.home}/lib" />
		<mkdir dir="${bert.home}/lib" />
		<copy todir="${bert.home}/lib">
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<chmod dir="${robot.dir}/lib" perm="ugo+rx" includes="**/*.jar"/>
		<echo message="Copying modules locally into ${bert.home}/mods" />
		<mkdir dir="${bert.home}/mods" />
		<copy todir="${bert.home}/mods">
			<fileset dir="${archive.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<chmod dir="${robot.dir}/mods" perm="ugo+rx" includes="**/*.jar"/>
	</target>			
</project>