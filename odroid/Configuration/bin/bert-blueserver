#!/bin/sh
# This is the init script for startup of the bluetooth tablet
# connection for "bert".
# Logs from this script will be found in /var/log/bert/
#
# This script starts the dispatcher and bluetooth command interface.
# The interactive terminal interface must be started separately, if at all.

### BEGIN INIT INFO
# Provides:          bert-blueserver
# Required-Start:    $local_fs $syslog $bluetooth
# Required-Stop:     $local_fs $syslog
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start bert tablet connection via bluetooth
### END INIT INFO

set -e
export BERT_HOME=/usr/local/robot
export BERTLOGDIR=/var/log/bert
export BERTLOG=${BERTLOGDIR}/blueserver.log
export DAEMON=${BERT_HOME}/bin/blueserverd
export PARAMS=""
export PIDDIR=/var/run/bert
export PIDFILE=${PIDDIR}/blueserver
PATH=/sbin:/bin:/usr/sbin:/usr/bin:${BERT_HOME}/bin

. /lib/lsb/init-functions
mkdir -p ${BERT_HOME}/logs
mkdir -p ${BERTLOGDIR}
mkdir -p ${PIDDIR}

case "$1" in
  start)
#       Uncomment for debugging, execute as: sudo bin/bert start
#        set -x
		rm -rf ${BERT_HOME}/logs/blueserver*
	> ${BERTLOG}
	
	# This is important. You must wait until the IP address of the machine
	# is actually configured. Loop until the IP comes up. This is needed
	# for the Bluetooth connection
 	while true; do
          IP="`hostname -I`"
          if [ "$IP" ] ; then
             echo "IP = ${IP}" >> ${ROSLOG}
             break
          fi
	  sleep 1
  	done
	IP=`echo ${IP}|sed -e 's/^[ \t]*//'`
	echo "IP = ${IP}" >> ${BERTLOG}
	echo "=============================== /etc/init.d/ros start ===========================" >> ${ROSLOG}
	if [ -e ${PIDFILE} ]
	 then
	 	log_success_msg "Bert blueserver already running ... no action taken"
	 	return
	 fi
	 # Launch Serial Port service and connect bluetooth devices
	 sdptool add SP
	 bluetoothctl <!
	 !
	 start-stop-daemon --start --pidfile ${PIDFILE} --exec $DAEMON
	 log_end_msg $?
  ;;

  restart)
    /etc/init.d/bert-blueserver stop
    /etc/init.d/bert-blueserver start
  ;;

  stop)
	start-stop-daemon --stop --retry 5 --oknodo --pidfile ${PIDFILE} 
	log_end_msg $?
	echo "=============================== /etc/init.d/bert-blueserver stopped ===========================" >> ${BERTLOG}
  ;;
  force-reload)
    /etc/init.d/bert-blueserver restart
  ;;

  *)
    echo "Usage: /etc/init.d/bert-blueserver {start|stop|restart|force-reload}"
    exit 1
    ;;
esac
